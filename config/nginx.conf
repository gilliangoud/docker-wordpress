worker_processes  1;
pid /run/nginx.pid;

events {
    worker_connections 1024;
}

http {
    include mime.types;
    default_type application/octet-stream;

    fastcgi_cache_path /var/run/nginx-cache levels=1:2 keys_zone=WORDPRESS:100m inactive=60m;
    fastcgi_cache_key "$scheme$request_method$host$request_uri";

    log_format  main_timed  '$remote_addr - $remote_user [$time_local] "$request" '
                            '$status $body_bytes_sent "$http_referer" '
                            '"$http_user_agent" "$http_x_forwarded_for" '
                            '$request_time $upstream_response_time $pipe $upstream_cache_status';

    access_log /dev/stdout main_timed;
    error_log /dev/stderr notice;

    keepalive_timeout 65;

    server_tokens off;

    # Enable gzip compression
    gzip on;
    gzip_disable "msie6";
    gzip_proxied any;

    gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/javascript;

    # Forward the cloudfront scheme from upstream
    map "$http_cloudfront_forwarded_proto$http_x_forwarded_proto" $forwarded_scheme {
         default off;
         "~*(https)" on;
     }

    server {
        listen [::]:80 default_server;
        listen 80 default_server;
        server_name _;

        sendfile off;

        # Increase proxy buffers for large requests
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Upload limit
        client_max_body_size 500m;
        client_body_buffer_size 128k;

        root /usr/src/wordpress;
        index index.php;

        set $skip_cache 0;

        # POST requests and URLs with a query string should always go to PHP
        if ($request_method = POST) {
            set $skip_cache 1;
        }

        if ($query_string != "") {
            set $skip_cache 1;
        }

        # Don't cache URIs containing the following segments
        if ($request_uri ~* "/wp-admin/|/xmlrpc.php|wp-.*.php|/feed/|index.php
                            |sitemap(_index)?.xml") {
            set $skip_cache 1;
        }

        # Don't use the cache for logged-in users or recent commenters
        if ($http_cookie ~* "comment_author|wordpress_[a-f0-9]+|wp-postpass
            |wordpress_no_cache|wordpress_logged_in") {
            set $skip_cache 1;
        }

        # redirect server error pages to the static page /50x.html
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root /var/lib/nginx/html;
        }

        location = /favicon.ico {
            log_not_found off;
            access_log off;
        }

        location = /robots.txt {
            log_not_found off;
            access_log off;
        }

        location ~* ^.+.(ogg|ogv|svg|svgz|eot|otf|woff|mp4|ttf|css|rss|atom|js|jpg|jpeg|gif|png|ico|zip|tgz|gz|rar|bz2|doc|xls|exe|ppt|tar|mid|midi|wav|bmp|rtf)$ {
            access_log off;
            log_not_found off;
            expires max;
        }

        # BEGIN SMUSH-WEBP
        location ~* "wp-content\/(uploads\/)(.*\.(?:png|jpe?g))" {
            add_header Vary Accept;
            set $image_path $2;
            if (-f "/var/www/wp-content/smush-webp/disable_smush_webp") {
                break;
            }
            if ($http_accept !~* "webp") {
                break;
            }
            expires	max;
            try_files /wp-content/smush-webp/$image_path.webp $uri =404;
        }
        # END SMUSH-WEBP

        # Based on https://codeable.io/wordpress-developers-intro-to-docker-part-two/
        location /wp-content {
            root /var/www;
            expires 7d;
            add_header Cache-Control "public";
        }

        location / {
            # First attempt to serve request as file, then
            # as directory, then fall back to index.php
            try_files $uri $uri/ /index.php?$args;
        }

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        location ~ \.php$ {
            try_files $uri =404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;

            #fastcgi_intercept_errors on;
            fastcgi_buffer_size 128k;
            fastcgi_buffers 4 256k;
            fastcgi_busy_buffers_size 256k;

            fastcgi_index index.php;
            fastcgi_pass 127.0.0.1:9000;

            fastcgi_cache_bypass $skip_cache;
            fastcgi_no_cache $skip_cache;
            fastcgi_cache WORDPRESS;
            fastcgi_cache_valid  60m;

            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            include fastcgi_params;

            # Forward the scheme from upstream
            fastcgi_param HTTPS $forwarded_scheme;
        }

        location ~ /purge(/.*) {
            fastcgi_cache_purge WORDPRESS "$scheme$request_method$host$1";
        }

        # Deny access to uploads that arenâ€™t images, videos, music, etc.
        location ~* ^/wp-content/uploads/.*.(html|htm|shtml|php|js|swf)$ {
            deny all;
        }

        # Deny access to wp-login.php
        location = /wp-login.php {
            limit_req zone=one burst=1 nodelay;
            fastcgi_pass 127.0.0.1:9000;
        }

        # deny access to . files, for security
        location ~ /\. {
            log_not_found off;
            deny all;
        }
    }
}
